@model DrinkCatalog.Data.Models.ViewModels.ShoppingCartVM

<div class="container mt-4">
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            @TempData["ErrorMessage"]
        </div>
    }

    <div class="alert alert-danger error-message" style="display:none;"></div>

    @if (!string.IsNullOrEmpty(Model.Message))
    {
        <div class="alert alert-info">@Model.Message</div>
    }
    else
    {
        <table class="table ">
            <thead>
                <tr>
                    <th>Товар</th>
                    <th>Название</th>
                    <th>Количество</th>
                    <th>Цена за единицу</th>
                    <th>Общая цена</th>
                    <th>Действия</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.ShoppingCartsList)
                {
                    <tr>
                        <td class="align-middle">
                            <img src="@item.Drink.ImageUrl" alt="@item.Drink.Name" class="img-thumbnail" style ="max-width: 200px;" />
                        </td>
                        <td class="align-middle">@item.Drink.Name</td>
                        <td class="align-middle">
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <button class="btn btn-sm btn-primary" onclick="updateCart(@item.Id, @item.Count - 1)">-</button>
                                </div>
                                <input type="number" class="form-control text-center" style="max-width: 80px; height: 40px;" value="@item.Count" onchange="manualUpdateCart(@item.Id, this.value)" />
                                <div class="input-group-append">
                                    <button class="btn btn-sm btn-primary" onclick="updateCart(@item.Id, @item.Count + 1)">+</button>
                                </div>
                            </div>
                        </td>
                        <td class="align-middle">@item.Drink.Price руб.</td>
                        <td class="align-middle">@(item.Drink.Price * item.Count) руб.</td>
                        <td class="align-middle">
                            <form method="post" asp-action="RemoveFromCart" asp-controller="ShoppingCart">
                                <input type="hidden" name="cartId" value="@item.Id" />
                                <button type="submit" class="btn btn-danger btn-sm">Удалить</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="text-right">
            <h4>Итоговая сумма: @Model.CartTotal руб.</h4>
        </div>

        <div class="mt-4">
            <a asp-controller="Home" asp-action="Index" class="btn btn-info ">Продолжить покупки</a>
            <a asp-controller="Payment" asp-action="Index" class="btn btn-success ">Оплата</a>
        </div>
    }
</div>


<style>
    /* Необходимо для сокрытия стрелок для увеличения/уменьшения товара в поле, т.к мешаются при увеличении изображения */
    input[type="number"]::-webkit-inner-spin-button,
    input[type="number"]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

</style>

@section Scripts {
    <script src="~/lib/jquery/jquery.min.js"></script>
    <script>
        function updateCart(cartId, newCount) {
            /*     // Если оставить условие, тогда не получится удалить товар из корзины, в случае,
        // если попытаемся уменьшить кол-во товара, когда кол-во = 1, если условие убрать, то товар удалится.
        // Оставил так, т.к. есть пункт в ТЗ "Количества меньше единицы быть не должно" */
            if (newCount < 1) {
                newCount = 1;
            }
            $.post('@Url.Action("UpdateCart", "ShoppingCart")', { cartId: cartId, newCount: newCount }, function (response) {
                if (response.success) {
                    // Обновление страницы или содержимого корзины
                    location.reload();
                } else {
                    displayErrorMessage(response.errorMessage);
                }
            });
        }

        function manualUpdateCart(cartId, newCount) {
            newCount = parseInt(newCount);
            if (isNaN(newCount) || newCount < 1) {
                newCount = 1;
            }
            $.post('@Url.Action("UpdateCart", "ShoppingCart")', { cartId: cartId, newCount: newCount }, function (response) {
                if (response.success) {
                    location.reload();
                } else {
                    displayErrorMessage(response.errorMessage);
                }
            });
        }

        // Функция для отображения сообщения об ошибке
        function displayErrorMessage(message) {
            $('.error-message').text(message).show(); 
        }
    </script>


}
